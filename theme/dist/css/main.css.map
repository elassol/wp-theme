{"version":3,"sources":["../../bower_components/reset-scss/reset.scss","_typography.scss","_layout.scss","../../bower_components/susy/sass/susy/output/support/_rem.scss","../../bower_components/susy/sass/susy/output/support/_background.scss","../../bower_components/susy/sass/susy/output/support/_clearfix.scss","../../bower_components/susy/sass/susy/language/susy/_gutters.scss","../../bower_components/susy/sass/susy/language/susy/_span.scss","_shame.scss","main.scss"],"names":[],"mappings":"AAKA,2ZAaE,SACA,UACA,SACA,eACA,aACA,uBAAyB,CAC1B,8EAIC,aAAe,CAChB,KAEC,aAAe,CAChB,MAEC,eAAiB,CAClB,aAEC,WAAa,CACd,oDAGC,WACA,YAAc,CACf,MAEC,yBACA,gBAAkB,CACnB,KCnCG,cAAgB,CACnB,EAPC,eACA,iBALgB,CAejB,GAXC,eACA,cALgB,CAoBjB,KAYC,kBACA,iBACA,kCAAoC,CACrC,EAGC,mBACA,aACA,oBAAsB,CACvB,MAGC,kBACA,oBAAsB,CACvB,YAGC,kBAAoB,CACrB,wBAKC,aACA,eAAiB,CAClB,WAEC,mBACA,kBACA,oBAAsB,CACvB,kBASC,uBACA,qBACA,aACA,kBAAoB,CACrB,GAEC,mBACA,kBAAoB,CACrB,GAEC,mBACA,gBAAkB,CACnB,GAEC,kBAAoB,CACrB,GAEC,kBAAoB,CACrB,GAEC,+BAAiC,CAClC,GAEC,mBAAqB,CACtB,MAGC,kBACA,mBACA,wBAA0B,CAC3B,kBAGC,UACA,gBAAkB,CACnB,KAGC,qBAAuB,CACxB,MAGC,kBAAoB,CACrB,KAGC,YAAc,CACf,qBAlHC,eACA,eAwHI,gBAAkB,CACnB,cCxGD,WACA,aAAe,CAClB,wCCPG,iBAAA,iBAAA,kBCNA,8GAcA,sBAcA,8BAcA,4BDpCA,6BDcF,aAAe,CAJjB,0DGjBM,YACA,cACA,UAAY,CACb,cFID,YAAA,WAAA,kBG4DwB,CJzC3B,aCnBG,YAAA,YAAA,cIkFoB,CL3DvB,aAQG,cACA,WACA,WAAa,CAEhB,eAGC,WACA,cACA,UACA,WAAa,CAEd,WAGC,cACA,WACA,WAAa,CAEd,aAGC,cACA,WACA,YACA,cAAgB,CACjB,aAMC,WACA,aACA,mEACA,qBAAuB,CACxB,oBAIC,aACE,AACA,wBAA0B,CAC7B,iBASC,qBACA,UACA,WAAa,CACd,qBAGC,cACA,WACA,YACA,eAAiB,CAClB,gBAGC,YACA,cACA,SACA,cAAgB,CACjB,mBAGC,qBACA,iBACA,UAAY,CAEb,qBAGC,2HACA,iBACA,eACA,kBACA,oBACA,iBACA,oBAAsB,CACvB,mBMxImB,YAAa,CCajC,oBACI,8BACA,6BACA,WACA,UACA,eAAiB,CACpB,SAwBC,YAAiB,CAClB,MAGG,mBACA,qBACA,YACA,qBAAA,AACA,oBADA,AACA,aAAA,6BAAA,AACA,yBADA,AACA,qBAAA,uBAAA,AAAgB,oBAAhB,AAAgB,cAAA,CAEnB,GAGG,cACA,WAAa,CAChB,YAIG,4BACA,qBAAA,AAAc,oBAAd,AAAc,YAAA,CACjB,cN9CG,iBAAA,iBAAA,kBCNA,8GAcA,sBAcA,8BAcA,4BDpCA,6BMoDC,aAAe,CAFpB,oBJzDM,YACA,cACA,UAAY,CI8DlB,KACE,yBACA,SACA,SAAW,CACZ,aAQC,eACA,WACA,kBACA,eACA,kBACA,aACA,mBACA,WACA,iCAAmC,CACpC,YAyCC,WACA,YACA,kBAEA,wBAA0B,CAC3B,QAMG,UAAU,CAAZ,QAAE,UAAU,CAAZ,QAAE,SAAU,CAAZ,QAAE,SAAU,CAAZ,QAAE,SAAU,CAAZ,QAAE,SAAU,CAAS","file":"main.css","sourcesContent":["/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}","@function calculateRem($size) {\n  $remSize: $size / 16px;\n  @return $remSize * 1rem;\n}\n\n@mixin font-size($size) {\n  font-size: $size;\n  font-size: calculateRem($size);\n}\n\n\nhtml {\n    font-size: 32px;\n}\n\np {\n  @include font-size(14px)\n}\n\n\nh1 {\n    @include font-size(32px)\n}\n\n\n\n// -----------------------------------------\n//    Typography\n// -----------------------------------------\n\n\n\nhtml {\n  /* Change default typefaces here */\n  font-family: serif;\n  font-size: 137.5%;\n  -webkit-font-smoothing: antialiased;\n}\n/* Copy & Lists */\np {\n  line-height: 1.5rem;\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n}\nul,\nol {\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\nul li,\nol li {\n  line-height: 1.5rem;\n}\nul ul,\nol ul,\nul ol,\nol ol {\n  margin-top: 0;\n  margin-bottom: 0;\n}\nblockquote {\n  line-height: 1.5rem;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n/* Headings */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  /* Change heading typefaces here */\n  font-family: sans-serif;\n  margin-bottom: 1.5rem;\n  margin-top: 0;\n  line-height: 1.5rem;\n}\nh1 {\n  font-size: 4.242rem;\n  line-height: 4.5rem;\n}\nh2 {\n  font-size: 2.828rem;\n  line-height: 3rem;\n}\nh3 {\n  font-size: 1.414rem;\n}\nh4 {\n  font-size: 0.707rem;\n}\nh5 {\n  font-size: 0.4713333333333333rem;\n}\nh6 {\n  font-size: 0.3535rem;\n}\n/* Tables */\ntable {\n  margin-top: 1.5rem;\n  border-spacing: 0px;\n  border-collapse: collapse;\n}\ntable td,\ntable th {\n  padding: 0;\n  line-height: 33px;\n}\n/* Code blocks */\ncode {\n  vertical-align: bottom;\n}\n/* Leading paragraph text */\n.lead {\n  font-size: 1.414rem;\n}\n/* Hug the block above you */\n.hug {\n  margin-top: 0;\n}\n\n\naside.widget-area {\n    \n    h2 { \n      @include font-size(16px)\n      font-weight: bold;\n    }\n\n}\n\n\n","// -----------------------------------------\n//     Susy setup\n// -----------------------------------------\n\n/* Changing Susy default global settings */\n\n$susy: (\n  columns: 12,\n  gutters: .25,\n  container: 1024px,\n  /* Tells Susy to use border-box */\n  global-box-sizing: border-box,\n  debug: (image: show)\n);\n\n\n\n// ==========================================================\n// LAYOUT \n// ==========================================================\n\n\n\n.site-wrapper {\n    width: 100%;\n    margin: 0 auto;\n}\n\n\n.site-header,\n.site-content,\n.site-footer {\n  @include container();\n  margin: 0 auto;\n}\n\n.content-area {\n  @include span(8); \n}\n\n.widget-area {\n  @include span(4 last); \n}\n\n\n// ==========================================================\n// Header \n// ==========================================================\n\n.site-header {\n    display: block;\n    width: 100%;\n    height: 72px;\n    // background: yellow;\n}\n\n.site-branding  {\n  float: left;\n  display: block;\n  width: 25%;\n  height: 72px;\n  // background: red;\n}\n\n.site-logo  {\n  display: block;\n  width: 100%;\n  height: auto;\n  \n}\n\n.site-logo a {\n  display: block;\n  width: 100%;\n  height: auto;\n  padding: 26px 0;\n}\n\n\n// site banner\n\n.site-banner {\n  width: 100%;\n  height: 450px;\n  background: url('../images/banner-023.jpg') no-repeat center center;\n  background-size: cover;\n} \n\n.site-banner.sticky {\n  // set animation\n  height: 100px;\n    -webkit-transition: all 0.8s ease;\n    transition: all 0.8s ease;\n}\n\n\n// ==========================================================\n// Nav \n// ==========================================================\n\n\n.main-navigation {\n  display: inline-block;\n  width: 75%;\n  height: 72px;\n}\n\n.main-navigation > div {\n  display: block;\n  width: 100%;\n  height: auto;\n  overflow: hidden;\n}\n\nul#primary-menu {\n  float: right;\n  display: block;\n  margin: 0;\n  padding: 19px 0;\n}\n\nul#primary-menu li {\n  display: inline-block;\n  margin-left: 20px;\n  float: left;\n\n}\n\nul#primary-menu li a {\n  font-family: \"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif; \n  font-weight: bold;\n  font-size: 16px;\n  font-style: normal;\n  font-variant: normal;\n  line-height: 24px;\n  text-decoration: none;\n}\n\n// ==========================================================\n// Nav \n// ==========================================================\n\n\n\n\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","button.menu-toggle {display:none;} \n","@import \"reset-scss/reset.scss\";\n@import \"variables\";\n@import \"utils\";\n@import \"susy/sass/_susy.scss\";\n@import \"typography\";\n@import \"layout\";\n@import \"shame\";\n\n\n// reset and susy are bower components \n\n\n// hide screen reader link\n.screen-reader-text {\n    clip: rect(1px, 1px, 1px, 1px);\n    position: absolute !important;\n    height: 1px;\n    width: 1px;\n    overflow: hidden;\n}\n\n\n\n// -----------------------------------------\n//     Table of contents\n// -----------------------------------------\n\n\n// base.scss – contains global styles, such as resets, typography, colors, etc.\n// components.scss – contains each self-contained component in its own .scss partial\n// layout.scss – contains styling for larger layout components; e.g. nav, header, footer, etc.\n// pages.scss – contains page-specific styling, if necessary\n// themes.scss – contains styling for different themes\n// utils.scss – contains global mixins, functions, helper selectors, etc.\n// vendors.scss – contains 3rd-party styles, mixins, etc.\n// main.scss – output file that brings together all of the above parts\n\n// -----------------------------------------\n//     Main styles\n// -----------------------------------------\n\n.testing {\n  // Percentage is a Sass function\n  width: percentage(5/7);\n}\n\n.test {\n    border-radius: 25px;\n    box-shadow: 10px 10px;\n    opacity: 0.5;\n    display: flex;\n    transform: scale(0.5);\n    column-count: 4;\n\n}\n\nh1 {\n    color: $brand-color;\n    opacity: 0.5;\n}\n\n\n.fat_header {\n    color: $brand-80-color;\n    display: flex;\n}\n\n\n\n.page_wrapper {\n     @include container;\n     margin: 0 auto;\n}\n\n\n\nbody {\n  background-color: $base-color;\n  margin: 0;\n  padding: 0;\n}\n\n\n// -----------------------------------------\n//     Header \n// -----------------------------------------\n\n.main-header {\n  position: fixed;\n  width: 100%;\n  text-align: center;\n  font-size: 72px;\n  line-height: 108px;\n  height: 108px;\n  background: #335C7D;\n  color: #fff;\n  font-family: 'PT Sans', sans-serif;\n}\n\n// header {\n//     position: fixed;\n//     left: 0;\n//     right: 0;\n//     margin: 0 auto;\n\n//     display: block;\n//     width: 960px;\n//     height: 72px;\n\n\n//     text-align: center;\n//     font-size: 72px;\n//     line-height: 108px;\n    \n//     background: #335C7D;\n//     color: #fff;\n//     font-family: 'PT Sans', sans-serif;\n    \n//     // set animation\n//     -webkit-transition: all 0.4s ease;\n//     transition: all 0.4s ease;\n// }\n\n// header.sticky {\n//     position: fixed;\n//     left: 0;\n//     right: 0;\n//     margin: 0 auto;\n//     font-size: 24px;\n//     line-height: 48px;\n//     height: 48px; \n//     width: 960px;\n//     background: green;\n//     text-align: left;\n    \n// }\n\n.hero-image {\n  width: 100%;\n  height: 50vh;\n  background: yellow;\n  \n  border-top: 2px solid red;\n}\n\n\n\n$i: 6;\n@while $i > 0 {\n  .item-#{$i} { width: 2em * $i; }\n  $i: $i - 1;\n}\n\n "],"sourceRoot":"/source/"}